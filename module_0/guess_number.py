import numpy as np

def score_game(game_core):
    '''Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число'''
    a = int(input("Введите нижнюю границу диапазона угадывания: "))
    b = int(input("Введите верхнюю границу диапазона угадывания: "))
    count_ls = [] # создаем пустой список для складывания в него чисел попыток угадывания
    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
    '''создаем массив из 1000 случайных чисел, каждое из которых лежит в диапазоне a-b '''
    random_array = np.random.randint(a, b, size=(1000))
    def wrapper():
        for number in random_array: # последовательно берем из массива случайные числа
            ''' Вызываем функцию game_core_v3, подставляя в нее очередное случайное число.
            Добавляем в массив результат работы этой функции. 
            nb: хотелось сделать диапазоны изменяемыми, но возникли проблемы с переменными
            a и b. Решить задачу с их областями видимости не получилось, поэтому 
            приходится каждый раз передавать их в функцию game_core_v3'''
            count_ls.append(game_core(number, a, b))
        score = int(np.mean(count_ls)) # считаем среднее из содержимого списка
        print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
        return (score) # возвращаем срднее число попыток
    return wrapper

@score_game
def game_core_v3(number, a, b):
    count = 1 # счетчик попыток
    while True: # запускаем бесконечный цикл
        half = (a + b)//2 # получаем середину диапазона
        count += 1
        if number == half: # если загаданное число равно середине диапазона,
            return(count) # то конец цикла
        elif number > half: # если загаданное число во второй половине,
            a = half + 1 # то переносим начало диапазона на середину + 1 (сокращаем диапазон в 2 раза)
        else:
            b = half - 1 # иначе переносим конец диапазона на середину - 1 (сокращаем диапазон в 2 раза)

game_core_v3()